services:
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - ifcconvert-worker
      - ifcclash-worker
      - ifccsv-worker
      - ifctester-worker
      - ifcdiff-worker
      - ifc5d-worker
      - redis
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - IFC_PIPELINE_API_KEY=${IFC_PIPELINE_API_KEY}
      - IFC_PIPELINE_ALLOWED_IP_RANGES=${IFC_PIPELINE_ALLOWED_IP_RANGES}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M

  rq-dashboard:
    image: eoranged/rq-dashboard
    ports:
      - "9181:9181"
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M

  ifc5d-worker:
    build:
      context: .
      dockerfile: ifc5d-worker/Dockerfile
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  ifcconvert-worker:
    build:
      context: .
      dockerfile: ifcconvert-worker/Dockerfile
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-ifcpipeline}
      - POSTGRES_USER=${POSTGRES_USER:-ifcpipeline}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  ifcclash-worker:
    build:
      context: .
      dockerfile: ifcclash-worker/Dockerfile
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-ifcpipeline}
      - POSTGRES_USER=${POSTGRES_USER:-ifcpipeline}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '4.0'
          memory: '6G'

  ifccsv-worker:
    build:
      context: .
      dockerfile: ifccsv-worker/Dockerfile
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1gb

  ifctester-worker:
    build:
      context: .
      dockerfile: ifctester-worker/Dockerfile
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-ifcpipeline}
      - POSTGRES_USER=${POSTGRES_USER:-ifcpipeline}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 1gb

  ifcdiff-worker:
    build:
      context: .
      dockerfile: ifcdiff-worker/Dockerfile
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-ifcpipeline}
      - POSTGRES_USER=${POSTGRES_USER:-ifcpipeline}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '4.0'
          memory: 4G

  ifc2json-worker:
    build:
      context: .
      dockerfile: ifc2json-worker/Dockerfile
    volumes:
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1gb

  n8n:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - "5678:5678"
    networks:
      - default
      - remotely-net
    volumes:
      - ./n8n-data:/home/node/.n8n
      - ./shared/uploads:/uploads
      - ./shared/output:/output
      - ./shared/examples:/examples
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - IFC_PIPELINE_URL=http://api-gateway
      - WEBHOOK_URL=${N8N_WEBHOOK_URL}
      - REMOTELY_URL=http://remotely:5000
      - N8N_SECURE_COOKIE=false
      - GENERIC_TIMEZONE=Europe/Stockholm
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_COMMUNITY_PACKAGES_ENABLED=${N8N_COMMUNITY_PACKAGES_ENABLED}
      - N8N_RUNNERS_ENABLED=true
      # PostgreSQL SSL settings
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - PGSSLMODE=disable
    depends_on:
      - api-gateway
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 6000M

  postgres:
    image: postgres:14
    container_name: ifc_pipeline_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ifcpipeline}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-ifcpipeline}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  pgweb:
    image: sosedoff/pgweb
    container_name: ifc_pipeline_pgweb
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER:-ifcpipeline}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-ifcpipeline}?sslmode=disable
    depends_on:
      - postgres
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M

volumes:
  shared:
  redis-data:
  postgres-data:
  pgadmin-data:

networks:
  default:
  remotely-net:
    name: remotely-net
    external: true